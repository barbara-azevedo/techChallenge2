name: Docker Build and Push - CI

on:
  push:
    branches:
      - main  # Executa o workflow ao realizar push na main branch
  workflow_dispatch:  # Permite acionar o workflow manualmente pela interface do GitHub
  pull_request:
    branches:
      - main  # Executa o workflow quando há pull request na main branch

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Checa o código
    - name: Checkout repository
      uses: actions/checkout@v3

    # Configura Docker para autenticar no Docker Hub
    - name: Log in to Docker Hub
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    # Faz o build da imagem Docker
    - name: Build Docker Image
      run: docker build . -t ${{ secrets.DOCKER_USERNAME }}/mtech-challenge2:latest

    # Faz o push da imagem para o Docker Hub
    - name: Push Docker Image
      run: docker push ${{ secrets.DOCKER_USERNAME }}/tech-challenge2:latest

    # Adiciona as variáveis secretas no container
    - name: Run Docker Container with ENV variables
      run: |
        docker run -d \
          -e PORT=${{ secrets.PORT }} \
          -e ENV=${{ secrets.ENV }} \
          -e DATABASE_USER=${{ secrets.DATABASE_USER }} \
          -e DATABASE_HOST=${{ secrets.DATABASE_HOST }} \
          -e DATABASE_NAME=${{ secrets.DATABASE_NAME }} \
          -e DATABASE_PASSWORD=${{ secrets.DATABASE_PASSWORD }} \
          -e DATABASE_PORT=${{ secrets.DATABASE_PORT }} \
          -e SECRET_JWT=${{ secrets.SECRET_JWT }} \
          -p ${{ secrets.PORT }}:3000 \
          ${{ secrets.DOCKER_USERNAME }}/tech-challenge2:latest
